{"version":3,"file":"static/js/583.4cea215f.chunk.js","mappings":"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","sources":["components/drawer/Profile.jsx","components/drawer/Drawer.jsx","components/chat/menu/HeaderMenu.jsx","components/chat/menu/Header.jsx","components/chat/menu/Search.jsx","service/api.js","utils/common-utils.js","components/chat/menu/Conversation.jsx","constants/data.js","components/chat/menu/Conversations.jsx","components/chat/menu/Menu.jsx","components/chat/chat/ChatHeader.jsx","components/chat/chat/Message.jsx","components/chat/chat/Footer.jsx","components/chat/chat/Messages.jsx","components/chat/chat/ChatBox.jsx","components/chat/chat/EmptyChat.jsx","components/chat/ChatDialog.jsx","components/account/LoginDialog.jsx","components/Messenger.jsx"],"sourcesContent":["import { useContext } from \"react\";\nimport { Box, styled, Typography } from \"@mui/material\"\n\nimport { AccountContext } from \"../../context/AccountProvider\";\n\nconst ImageContainer = styled(Box)`\n    display: flex;\n    justify-content: center;\n`;\n\nconst Image = styled('img') ({\n    width: 200,\n    height: 200,\n    borderRadius: '50%',\n    padding: '25px 0'\n});\n\nconst BoxWrapper = styled(Box)`\n    background: #FFFFFF;\n    padding: 12px 30px 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);\n    & :first-child {\n        font-size: 13px;\n        color: #009688;\n        font-weight: 200;\n    };\n    & :last-child {\n        margin: 14px 0;\n        color: #4A4A4A;\n    }\n`;\n\nconst DescriptionContainer = styled(Box)`\n    padding: 15px 20px 28px 30px;\n    & > p {\n        color: #8696a0;\n        font-size: 13px;\n    }\n`;\n\nconst Profile = () => {\n\n    const { account } = useContext(AccountContext);\n\n    return (\n        <>\n            <ImageContainer>\n                <Image src={account.picture} alt=\"displaypicture\" />\n            </ImageContainer>\n            <BoxWrapper>\n                <Typography>Your name</Typography>\n                <Typography>{account.name}</Typography>\n            </BoxWrapper>\n            <DescriptionContainer>\n                <Typography>This is not your username or pin. This name will be visible to your WhatsApp contacts.</Typography>\n            </DescriptionContainer>\n            <BoxWrapper>\n                <Typography>About</Typography>\n                <Typography>Eat! Sleep! Code! Repeat</Typography>\n            </BoxWrapper>\n        </>\n    )\n}\n\nexport default Profile;","import { styled, Drawer, Box, Typography } from '@mui/material';\nimport { ArrowBack } from '@mui/icons-material';\n\n//components\nimport Profile from './Profile';\n\nconst Header = styled(Box)`\n  background: #008069;\n  height: 107px;\n  color: #FFFFFF;\n  display: flex;\n  & > svg, & > p {\n    margin-top: auto;\n    padding: 15px;\n    font-weight: 600;\n`;\n\nconst Component = styled(Box)`\n  background: #ededed;\n  height: 85%;\n`;\n\nconst Text = styled(Typography)`\n    font-size: 18px;\n`\n\nconst drawerStyle = {\n    left: 20,\n    top: 17,\n    height: '95%',\n    width: '30%',\n    boxShadow: 'none'\n}\n\nconst InfoDrawer = ({ open, setOpen, profile }) => {\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Drawer\n            open={open}\n            onClose={handleClose}\n            PaperProps={{ sx: drawerStyle }}\n            style={{ zIndex: 1500 }}\n        >\n            <Header>\n                <ArrowBack onClick={() => setOpen(false)} />\n                <Text>Profile</Text>\n            </Header>\n            <Component>\n                {profile && <Profile />}\n            </Component>\n        </Drawer>\n    );\n}\n\nexport default InfoDrawer;","import { useState, useContext } from 'react';\n\nimport { MoreVert } from '@mui/icons-material';\nimport { Menu, MenuItem, styled } from '@mui/material';\n\nimport { googleLogout } from '@react-oauth/google';\nimport { AccountContext } from '../../../context/AccountProvider';\nimport { UserContext } from '../../../context/UserProvider';\n\nimport { clientId } from '../../../constants/data';\n\n//components\nimport InfoDrawer from '../../drawer/Drawer';\n\nconst MenuOption = styled(MenuItem)`\n    font-size: 14px\n    padding: 15px 60px 5px 24px;\n    color: #4A4A4A;\n`;\n\nconst Logout = styled(googleLogout)`\n    border: none;\n    box-shadow: none;\n`;\n\nconst HeaderMenu = () => {\n    \n    const [open, setOpen] = useState(false);\n    const [openDrawer, setOpenDrawer] = useState(false);\n    \n    const { setAccount, setShowloginButton, showlogoutButton, setShowlogoutButton } = useContext(AccountContext);\n    const { setPerson } = useContext(UserContext);\n\n\n    const handleClick = (event) => {\n        setOpen(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setOpen(null);\n    };\n\n    const onSignoutSuccess = () => {\n        alert(\"You have been logged out successfully\");\n        console.clear();\n        setShowlogoutButton(false);\n        setShowloginButton(true);\n        setAccount('');\n        setPerson({});\n    };\n\n    const toggleDrawer = () => {\n        setOpenDrawer(true);\n    }\n\n\n\n    return (\n        <>\n            <MoreVert onClick={handleClick} />\n            <Menu\n                anchorEl={open}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <MenuOption onClick={() => { handleClose(); toggleDrawer()}}>Profile</MenuOption>\n                <MenuOption onClick={() => { handleClose(); }}>\n                {/* { showlogoutButton ?\n                    <Logout\n                        clientId={clientId}\n                        buttonText=\"Logout\"\n                        onLogoutSuccess={onSignoutSuccess}\n                    >\n                    </Logout> : null\n                } */}\n                </MenuOption>\n            </Menu>\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\n        </>\n    )\n}\n\nexport default HeaderMenu;\n","import { useContext, useState } from 'react';\n\nimport { Box, styled } from '@mui/material';\nimport { Chat as MessageIcon } from '@mui/icons-material';\n\nimport { AccountContext } from '../../../context/AccountProvider';\n\n//components\nimport HeaderMenu from './HeaderMenu';\nimport InfoDrawer from '../../drawer/Drawer';\n\nconst Component = styled(Box)`\n    height: 44px;\n    background: #ededed;\n    display: flex;\n    padding: 8px 16px;\n    align-items: center;\n`;\n\nconst Wrapper = styled(Box) `\n    margin-left: auto;\n    & > * {\n        margin-left: 2px;\n        padding: 8px;\n        color: #000;\n    };\n    & :first-child {\n        font-size: 22px;\n        margin-right: 8px;\n        margin-top: 3px;\n    }\n`;\n    \nconst Image = styled('img') ({\n    height: 40,\n    width: 40,\n    borderRadius: '50%'\n})\n\nconst Header = () => {\n    \n    const [openDrawer, setOpenDrawer] = useState(false);\n\n    const { account } = useContext(AccountContext);\n    \n    const toggleDrawer = () => {\n        setOpenDrawer(true);\n    }\n\n    return (\n        <>\n            <Component>\n                <Image src={account.picture} onClick={() => toggleDrawer()} />\n                <Wrapper>\n                    <MessageIcon />\n                    <HeaderMenu/>\n                </Wrapper>\n            </Component>\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\n        </>\n    )\n}\n\nexport default Header;","\nimport { Box, InputBase, styled } from '@mui/material';\nimport { Search as SearchIcon } from '@mui/icons-material';\n\nconst Component = styled(Box)`\n    background: #fff;\n    height: 45px;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid #F2F2F2;\n`;\n\nconst Wrapper = styled(Box)`\n    position: relative;\n    border-radius: 10px;\n    background-color: #f0f2f5;\n    margin: 0 13px;\n    width: 100%;\n`;\n\nconst Icon = styled(Box)`\n    color: #919191;\n    padding: 8px;\n    height: 100%;\n    position: absolute;\n`;\n      \nconst InputField = styled(InputBase) `\n    width: 100%;\n    padding: 16px;\n    padding-left: 65px;\n    font-size: 14px;\n    height: 15px;\n    width: 100%;\n`;\n\nconst Search = ({ setText }) => {\n\n    return (\n        <Component>\n            <Wrapper>\n                <Icon>\n                    <SearchIcon fontSize=\"small\"/>\n                </Icon>\n                <InputField\n                    placeholder=\"Search or start new chat\"\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange={(e) => setText(e.target.value)}\n                />\n            </Wrapper>\n        </Component>\n    )\n}\n\nexport default Search;","  \nimport axios from 'axios';\n\nconst url = 'http://localhost:8000';\n\nexport const addUser = async (data) => {\n    try {\n        let response = await axios.post(`${url}/add`, data);\n        return response.data;\n    } catch (error) {\n        console.log('Error while calling addUser API ', error);\n    }\n}\n\nexport const getUsers = async () => {\n    try {\n        let response = await axios.get(`${url}/users`);\n        return response.data\n    } catch (error) {\n        console.log('Error while calling getUsers API ', error);\n    }\n}\n\nexport const setConversation = async (data) => {\n    try {\n        await axios.post(`${url}/conversation/add`, data);\n    } catch (error) {\n        console.log('Error while calling setConversation API ', error);\n    }\n}\n\nexport const getConversation = async (users) => {\n    try {\n        let response = await axios.post(`${url}/conversation/get`, users);\n        return response.data;\n    } catch (error) {\n        console.log('Error while calling getConversation API ', error);\n    }\n}\n\nexport const getMessages = async (id) => {\n    try {\n        let response = await axios.get(`${url}/message/get/${id}`);\n        return response.data\n    } catch (error) {\n        console.log('Error while calling getMessages API ', error);\n    }\n}\n\nexport const newMessages = async (data) => {\n    try {\n        return await axios.post(`${url}/message/add`, data);\n    } catch (error) {\n        console.log('Error while calling newConversations API ', error);\n    }\n}\n\nexport const uploadFile = async (data) => {\n    try {\n        return await axios.post(`${url}/file/upload`, data);\n    } catch (error) {\n        console.log('Error while calling newConversations API ', error);\n    }\n}","\n\nexport const downloadMedia = async (e, originalImage) => {\n    e.preventDefault();\n    try {\n        fetch(originalImage)\n        .then(resp => resp.blob())\n        .then(blob => {\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.style.display = 'none';\n            a.href = url;\n\n            const nameSplit = originalImage.split(\"/\");\n            const duplicateName = nameSplit.pop();\n\n            // the filename you want\n            a.download = \"\" + duplicateName + \"\";\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n        })\n        .catch((error) => console.log('Error while downloading the image ', error))\n\n    } catch (error) {\n        console.log('Error while downloading the image ', error);\n    }\n}\n\nexport const formatDate = (date) => {\n    const hours = new Date(date).getHours();\n    const minutes = new Date(date).getMinutes();\n    return `${hours < 10 ? '0' + hours : hours}:${minutes < 10 ? '0' + minutes : minutes}`;\n}","import { useContext, useEffect, useState } from 'react';\n\nimport { styled, Box, Typography } from \"@mui/material\";\n\nimport { UserContext } from '../../../context/UserProvider';\nimport { AccountContext } from '../../../context/AccountProvider';\n\nimport { setConversation, getConversation } from '../../../service/api';\nimport { emptyProfilePicture } from '../../../constants/data';\nimport { formatDate } from '../../../utils/common-utils';\n\nconst Component = styled(Box)`\n    height: 45px;\n    display: flex;\n    padding: 13px 0;\n    cursor: pointer;\n`;\n    \nconst Image = styled('img') ({\n    width: 50,\n    height: 50,\n    objectFit: 'cover',\n    borderRadius: '50%',\n    padding: '0 14px'\n});\n\nconst Container = styled(Box)`\n    display: flex;\n`;\n\nconst Timestamp = styled(Typography)`\n    font-size: 12px;\n    margin-left: auto;\n    color: #00000099;\n    margin-right: 20px;\n`;\n\nconst Text = styled(Typography)`\n    display: block;\n    color: rgba(0, 0, 0, 0.6);\n    font-size: 14px;\n`;\n\nconst Conversation = ({ user }) => {\n    const url = user.picture || emptyProfilePicture;\n    \n    const { setPerson } = useContext(UserContext);\n    const { account, newMessageFlag }  = useContext(AccountContext);\n\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        const getConversationMessage = async() => {\n            const data = await getConversation({ senderId: account.sub, receiverId: user.sub });\n            setMessage({ text: data?.message, timestamp: data?.updatedAt });\n        }\n        getConversationMessage();\n    }, [newMessageFlag]);\n\n    const getUser = async () => {\n        setPerson(user);\n        await setConversation({ senderId: account.sub, receiverId: user.sub });\n    }\n\n    return (\n        <Component onClick={() => getUser()}>\n            <Box>\n                <Image src={url} alt=\"display picture\" />\n            </Box>\n            <Box style={{width: '100%'}}>\n                <Container>\n                    <Typography>{user.name}</Typography>\n                    { \n                        message?.text && \n                        <Timestamp>{formatDate(message?.timestamp)}</Timestamp>        \n                    }\n                </Container>\n                <Box>\n                    <Text>{message?.text?.includes('localhost') ? 'media' : message.text}</Text>\n                </Box>\n            </Box>\n        </Component>\n    )\n}\n\nexport default Conversation;","export const clientId = '1051426514050-dv0o9fu9umand32ov9iqcamvuf9gttta.apps.googleusercontent.com'\r\n\r\nexport const iconPDF = 'https://cdn4.iconfinder.com/data/icons/logos-and-brands/512/27_Pdf_File_Type_Adobe_logo_logos-512.png';\r\nexport const defaultProfilePicture = 'https://static.straitstimes.com.sg/s3fs-public/articles/2020/12/01/af_moneyheist_011220.jpg';\r\nexport const emptyChatImage = 'https://i.gadgets360cdn.com/large/whatsapp_multi_device_support_update_image_1636207150180.jpg';\r\nexport const qrCodeImage = 'https://www.ginifab.com/feeds/qr_code/img/qrcode.jpg';\r\nexport const emptyProfilePicture = 'https://www.kindpng.com/picc/m/78-785827_user-profile-avatar-login-account-male-user-icon.png';","import { useState, useEffect, useContext } from 'react';\n\nimport { Box, styled, Divider } from '@mui/material';\n\nimport { AccountContext } from '../../../context/AccountProvider';\n\n//components\nimport Conversation from './Conversation';\nimport { getUsers } from '../../../service/api';\n\nconst Component = styled(Box)`\n    overflow: overlay;\n    height: 81vh;\n`;\n\nconst StyledDivider = styled(Divider)`\n    margin: 0 0 0 70px;\n    background-color: #e9edef;\n    opacity: .6;\n`;\n\nconst Conversations = ({ text }) => {\n    const [users, setUsers] = useState([]);\n    \n    const { account, socket, setActiveUsers } = useContext(AccountContext);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            let data = await getUsers();\n            let fiteredData = data.filter(user => user.name.toLowerCase().includes(text.toLowerCase()));\n            setUsers(fiteredData);\n        }\n        fetchData();\n    }, [text]);\n\n    useEffect(() => {\n        socket.current.emit('addUser', account);\n        socket.current.on(\"getUsers\", users => {\n            setActiveUsers(users);\n        })\n    }, [account])\n\n    return (\n        <Component>\n            {\n                users && users.map((user, index) => (\n                    user.sub !== account.sub && \n                        <>\n                            <Conversation user={user} />\n                            {\n                                users.length !== (index + 1)  && <StyledDivider />\n                            }\n                        </>\n                ))\n            }\n        </Component>\n    )\n}\n\nexport default Conversations;","import { useState } from 'react';\n\nimport { Box } from '@mui/material';\n\n//components\nimport Header from './Header';\nimport Search from './Search';\nimport Conversations from './Conversations';\n\nconst Menu = () => {\n    const [text, setText] = useState('');\n    \n    return (\n        <Box>\n            <Header/>\n            <Search setText={setText} />\n            <Conversations text={text} />\n        </Box>\n    )\n}\n\nexport default Menu;","import { useContext } from 'react';\n\nimport { Box, Typography, styled } from '@mui/material';\nimport { Search, MoreVert } from '@mui/icons-material';\n\nimport { AccountContext } from '../../../context/AccountProvider';\nimport { defaultProfilePicture } from '../../../constants/data';\n\nconst Header = styled(Box)`\n    height: 44px;\n    background: #ededed;\n    display: flex;\n    padding: 8px 16px;\n    align-items: center;\n`;\n    \nconst Image = styled('img')({\n    width: 40,\n    height: 40,\n    objectFit: 'cover',\n    borderRadius: '50%'\n})\n\nconst Name = styled(Typography)`\n    margin-left: 12px !important;\n`;\n\nconst RightContainer = styled(Box)`\n    margin-left: auto;\n    & > svg {\n        padding: 8px;\n        font-size: 22px;\n        color: #000;\n    }\n`;\n\nconst Status = styled(Typography)`\n    font-size: 12px !important;\n    color: rgb(0, 0, 0, 0.6);\n    margin-left: 12px !important;\n`;\n\nconst ChatHeader = ({ person }) => {  \n\n    const url = person.picture || defaultProfilePicture;\n    \n    const { activeUsers } = useContext(AccountContext);\n\n    return (\n        <Header>\n            <Image src={url} alt=\"display picture\" />     \n            <Box>\n                <Name>{person.name}</Name>\n                <Status>{activeUsers?.find(user => user.sub === person.sub) ? 'Online' : 'Offline'}</Status>    \n            </Box>   \n            <RightContainer>\n                <Search />\n                <MoreVert />    \n            </RightContainer> \n        </Header>\n    )\n}\n\nexport default ChatHeader;","import { useContext } from 'react';\n\nimport { Box, styled, Typography } from '@mui/material';\nimport { GetApp as GetAppIcon } from '@mui/icons-material';\n\nimport { AccountContext } from '../../../context/AccountProvider';\n\nimport { downloadMedia, formatDate } from '../../../utils/common-utils';\nimport { iconPDF } from '../../../constants/data';\n\nconst Wrapper = styled(Box)`\n    background: #FFFFFF;\n    padding: 5px;\n    max-width: 60%;\n    width: fit-content;\n    display: flex;\n    border-radius: 10px;\n    word-break: break-word;\n`;\n    \nconst Own = styled(Box)`\n    background: #dcf8c6;\n    padding: 5px;\n    max-width: 60%;\n    width: fit-content;\n    margin-left: auto;\n    display: flex;\n    border-radius: 10px;\n    word-break: break-word;\n`;\n\nconst Text = styled(Typography)`\n    font-size: 14px;\n    padding: 0 25px 0 5px;\n`;\n\nconst Time = styled(Typography)`\n    font-size: 10px;\n    color: #919191;\n    margin-top: 6px;\n    word-break: keep-all;\n    margin-top: auto;\n`;\n\nconst Message = ({ message }) => {\n    const { account } = useContext(AccountContext);\n\n    return (\n        <>\n        {\n            account.sub === message.senderId ? \n                <Own>\n                    {\n                        message.type === 'file' ? <ImageMessage message={message} /> : <TextMessage message={message} />\n                    }\n                </Own>\n            : \n                <Wrapper>\n                    {\n                        message.type === 'file' ? <ImageMessage message={message} /> : <TextMessage message={message} />\n                    }\n                </Wrapper>\n        }\n        \n        </>\n    )\n}\n\nconst TextMessage = ({ message }) => {\n    \n    return (\n        <>\n            <Text>{message.text}</Text>\n            <Time>{formatDate(message.createdAt)}</Time>\n        </>\n    )\n}\n\nconst ImageMessage = ({ message }) => {\n\n    return (\n        <div style={{ position: 'relative' }}>\n            {\n                message?.text?.includes('.pdf') ?\n                    <div style={{ display: 'flex' }}>\n                        <img src={iconPDF} alt=\"pdf-icon\" style={{ width: 80 }} />\n                        <Typography style={{ fontSize: 14 }} >{message.text.split(\"/\").pop()}</Typography>\n                    </div>\n                : \n                    <img style={{ width: 300, height: '100%', objectFit: 'cover' }} src={message.text} alt={message.text} />\n            }\n            <Time style={{ position: 'absolute', bottom: 0, right: 0 }}>\n                <GetAppIcon \n                    onClick={(e) => downloadMedia(e, message.text)} \n                    fontSize='small' \n                    style={{ marginRight: 10, border: '1px solid grey', borderRadius: '50%' }} \n                />\n                {formatDate(message.createdAt)}\n            </Time>\n        </div>\n    )\n}\n\n\nexport default Message;","import { useEffect } from 'react';\n\nimport { EmojiEmotions, AttachFile, Mic } from '@mui/icons-material';\nimport { Box, styled, InputBase } from '@mui/material';\n\nimport { uploadFile } from '../../../service/api';\n\nconst Container = styled(Box)`\n    height: 55px;\n    background: #ededed;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding: 0 15px;\n    &  > * {\n        margin: 5px;\n        color: #919191;\n    }\n`;\n\nconst Search = styled(Box)`\n    border-radius: 18px;\n    background-color: #FFFFFF;\n    width: calc(94% - 100px);\n`;\n\nconst InputField = styled(InputBase)`\n    width: 100%;\n    padding: 20px;\n    padding-left: 25px;\n    font-size: 14px;\n    height: 20px;\n    width: 100%;\n`;\n\nconst ClipIcon = styled(AttachFile)`\n    transform: 'rotate(40deg)'\n`;\n\n\nconst Footer = ({ sendText, value, setValue, setFile, file, setImage }) => {\n\n    useEffect(() => {\n        const getImage = async () => {\n            if (file) {\n                const data = new FormData();\n                data.append(\"name\", file.name);\n                data.append(\"file\", file);\n\n                const response = await uploadFile(data);\n                setImage(response.data);\n            }\n        }\n        getImage();\n    }, [file])\n\n    const onFileChange = (e) => {\n        setValue(e.target.files[0].name);\n        setFile(e.target.files[0]);\n    }\n\n    return (\n        <Container>\n            <EmojiEmotions />\n            <label htmlFor=\"fileInput\">\n                <ClipIcon />\n            </label>\n            <input\n                type='file'\n                id=\"fileInput\"\n                style={{ display: 'none' }}\n                onChange={(e) => onFileChange(e)}\n            />\n\n            <Search>\n                <InputField\n                    placeholder=\"Type a message\"\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange={(e) => setValue(e.target.value)}\n                    onKeyPress={(e) => sendText(e)}\n                    value={value}\n                />\n            </Search>\n            <Mic />\n        </Container>\n    )\n}\n\nexport default Footer;","import { useState, useEffect, useContext, useRef } from 'react';\nimport { Box, styled } from '@mui/material';\n\nimport { io } from 'socket.io-client';\n\nimport { getMessages, newMessages } from '../../../service/api';\nimport { AccountContext } from '../../../context/AccountProvider';\n\n//components\nimport Message from './Message';\nimport Footer from './Footer';\n\nconst Wrapper = styled(Box)`\n    background-image: url(${'https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png'});\n    background-size: 50%;\n`;\n\nconst StyledFooter = styled(Box)`\n    height: 55px;\n    background: #ededed;\n    // position: absolute;\n    width: 100%;\n    // bottom: 0\n`;\n    \nconst Component = styled(Box)`\n    height: 80vh;\n    overflow-y: scroll;\n`;\n\nconst Container = styled(Box)`\n    padding: 1px 80px;\n`;\n\n\n\nconst Messages = ({ person, conversation }) => {\n\n    const [messages, setMessages] = useState([]);\n    const [incomingMessage, setIncomingMessage] = useState(null);\n    const [value, setValue] = useState();\n    const [file, setFile] = useState();\n    const [image, setImage] = useState();\n\n    const scrollRef = useRef();\n\n    const { account, socket, newMessageFlag, setNewMessageFlag } = useContext(AccountContext);\n\n    useEffect(() => {\n        socket.current.on('getMessage', data => {\n            setIncomingMessage({\n                ...data,\n                createdAt: Date.now()\n            })\n        })\n    }, []);\n    \n    useEffect(() => {\n        const getMessageDetails = async () => {\n            let data = await getMessages(conversation?._id);\n            setMessages(data);\n        }\n        getMessageDetails();\n    }, [conversation?._id, person._id, newMessageFlag]);\n\n    useEffect(() => {\n        scrollRef.current?.scrollIntoView({ transition: \"smooth\" })\n    }, [messages]);\n\n    useEffect(() => {\n        incomingMessage && conversation?.members?.includes(incomingMessage.senderId) && \n            setMessages((prev) => [...prev, incomingMessage]);\n        \n    }, [incomingMessage, conversation]);\n\n    const receiverId = conversation?.members?.find(member => member !== account.sub);\n    \n    const sendText = async (e) => {\n        let code = e.keyCode || e.which;\n        if(!value) return;\n\n        if(code === 13) { \n            let message = {};\n            if (!file) {\n                message = {\n                    senderId: account.sub,\n                    receiverId: receiverId,\n                    conversationId: conversation._id,\n                    type: 'text',\n                    text: value\n                };\n            } else {\n                message = {\n                    senderId: account.sub,\n                    conversationId: conversation._id,\n                    receiverId: receiverId,\n                    type: 'file',\n                    text: image\n                };\n            }\n\n            socket.current.emit('sendMessage', message);\n\n            await newMessages(message);\n\n            setValue('');\n            setFile();\n            setImage('');\n            setNewMessageFlag(prev => !prev);\n        } \n    }\n\n    return (\n        <Wrapper>\n            <Component>\n                {\n                    messages && messages.map(message => (\n                        <Container ref={scrollRef}>\n                            <Message message={message} />\n                        </Container>\n                    ))\n                }\n            </Component>\n            <Footer \n                sendText={sendText} \n                value={value} \n                setValue={setValue} \n                setFile={setFile} \n                file={file} \n                setImage={setImage}\n            />\n        </Wrapper>\n    )\n}\n\nexport default Messages;","import { useContext, useState, useEffect } from 'react';\n\nimport { Box } from '@mui/material';\n\nimport { UserContext } from '../../../context/UserProvider';\nimport { AccountContext } from '../../../context/AccountProvider';\nimport { getConversation } from '../../../service/api';\n\n//components\nimport ChatHeader from './ChatHeader';\nimport Messages from './Messages';\n\nconst ChatBox = () => {\n    const { person } = useContext(UserContext);\n    const { account } = useContext(AccountContext);\n\n    const [conversation, setConversation] = useState({});\n    \n    useEffect(() => {\n        const getConversationDetails = async () => {\n            let data = await getConversation({ senderId: account.sub, receiverId: person.sub });\n            setConversation(data);\n        }\n        getConversationDetails();\n    }, [person.sub]);\n\n    return (\n        <Box style={{height: '75%'}}>\n            <ChatHeader person={person} />\n            <Messages person={person} conversation={conversation} />\n        </Box>\n    )\n}\n\nexport default ChatBox;","\nimport { Box, styled, Typography, Divider } from '@mui/material';\n\nimport { emptyChatImage } from '../../../constants/data';\n\nconst Component = styled(Box)`\n    background: #f8f9fa;\n    padding: 30px 0;\n    text-align: center;\n    height: 100%;\n`;\n\nconst Container = styled(Box)`\n    padding: 0 200px;\n`;\n    \nconst Image = styled('img')({\n    marginTop: 100,\n    width: 400\n})\n   \nconst Title = styled(Typography)`\n    font-size: 32px;\n    font-family: inherit;\n    font-weight: 300;\n    color: #41525d;\n    margin-top: 25px 0 10px 0;\n`;\n\nconst SubTitle = styled(Typography)`\n    font-size: 14px;\n    color: #667781;\n    font-weight: 400;\n    font-family: inherit;\n`;\n\nconst StyledDivider = styled(Divider)`\n    margin: 40px 0;\n    opacity: 0.4;\n`;\n\nconst EmptyChat = () => {\n    \n    return (\n        <Component>\n            <Container>\n                <Image src={emptyChatImage} alt=\"empty\" />\n                <Title>WhatsApp Web</Title>\n                <SubTitle>Now send and receive messages without keeping your phone online.</SubTitle>\n                <SubTitle>Use WhatsApp on up to 4 linked devices and 1 phone at the same time. </SubTitle>\n                <StyledDivider />\n            </Container>\n        </Component>\n    )\n}\n\nexport default EmptyChat;","import { useContext } from 'react';\r\nimport { Dialog, styled, Box } from '@mui/material';\r\n\r\nimport { UserContext } from '../../context/UserProvider';\r\n\r\n//components\r\nimport Menu from './menu/Menu';\r\nimport ChatBox from './chat/ChatBox';\r\nimport EmptyChat from './chat/EmptyChat';\r\n\r\nconst Component = styled(Box)`\r\n    display: flex;\r\n`;\r\n    \r\nconst LeftComponent = styled(Box)`\r\n    min-width: 450px;\r\n`;\r\n    \r\nconst RightComponent = styled(Box)`\r\n    width: 73%;\r\n    min-width: 300px;\r\n    height: 100%;\r\n    border-left: 1px solid rgba(0, 0, 0, 0.14);\r\n`;\r\n\r\nconst dialogStyle = {\r\n    height: '95%',\r\n    width: '100%',\r\n    margin: '20px',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    overflow: 'hidden'\r\n};\r\n\r\nconst ChatDialog = () => {\r\n\r\n    const { person } = useContext(UserContext);\r\n    \r\n    return (\r\n        <Dialog \r\n            open={true} \r\n            BackdropProps={{style: {backgroundColor: 'unset'}}}\r\n            PaperProps={{ sx: dialogStyle }}\r\n            maxWidth={'md'}\r\n        >\r\n            <Component>\r\n                <LeftComponent>\r\n                    <Menu/>\r\n                </LeftComponent>\r\n                <RightComponent>\r\n                    {\r\n                        Object.keys(person).length  ? <ChatBox/> : <EmptyChat />\r\n                    }\r\n                </RightComponent>\r\n            </Component>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ChatDialog;","import React,{useContext} from \"react\";\r\nimport { qrCodeImage } from '../../constants/data';\r\nimport { Dialog, Typography, List, ListItem, Box, styled } from '@mui/material';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { addUser } from '../../service/api';\r\nimport { AccountContext } from '../../context/AccountProvider';\r\n\r\nconst Component = styled(Box)`\r\n    display: flex; \r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    padding: 56px 0 56px 56px;\r\n`;\r\n\r\nconst QRCOde = styled('img')({\r\n    margin: '50px 0 0 50px',\r\n    height: 264,\r\n    width: 264\r\n});\r\n\r\nconst Title = styled(Typography)`\r\n    font-size: 26px;\r\n    margin-bottom: 25px;\r\n    color: #525252;\r\n    font-family: Segoe UI,Helvetica Neue,Helvetica,Lucida Grande,Arial,Ubuntu,Cantarell,Fira Sans,sans-serif;\r\n    font-weight: 300;\r\n`;\r\n\r\nconst StyledList = styled(List)`\r\n    &  > li {\r\n        padding: 0;\r\n        margin-top: 15px;\r\n        font-size: 18px;\r\n        line-height: 28px;\r\n        color: #4a4a4a;\r\n    }\r\n`;\r\n\r\nconst dialogStyle = {\r\n    marginTop: '12%',\r\n    height: '95%',\r\n    width: '60%',\r\n    maxWidth: '100',\r\n    maxHeight: '100%',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    overflow: 'hidden'\r\n}\r\n\r\nconst LoginDialog=()=>{\r\n    const { setAccount,showloginButton, setShowloginButton, setShowlogoutButton } = useContext(AccountContext);\r\n\r\n    const onLoginSuccess = async (res) => {\r\n        let decoded = jwt_decode(res.credential);\r\n        setAccount(decoded);\r\n        setShowloginButton(false);\r\n        setShowlogoutButton(true);\r\n        await addUser(decoded);\r\n    };\r\n\r\n    const onLoginFailure = (res) => {\r\n        console.log('Login Failed:', res);\r\n    };\r\n\r\n    return (\r\n<Dialog\r\n            open={true}\r\n            BackdropProps={{style: {backgroundColor: 'unset'}}}\r\n            maxWidth={'md'}\r\n            PaperProps={{ sx: dialogStyle }}\r\n        >\r\n            <Component>\r\n                <Container>\r\n                    <Title>To use WhatsApp on your computer:</Title>\r\n                    <StyledList>\r\n                        <ListItem>1. Open WhatsApp on your phone</ListItem>\r\n                        <ListItem>2. Tap Menu Settings and select WhatsApp Web</ListItem>\r\n                        <ListItem>3. Point your phone to this screen to capture the code</ListItem>\r\n                    </StyledList>\r\n                </Container>\r\n                <Box style={{position:'relative'}}>\r\n                    <QRCOde src={qrCodeImage} alt=\"QR Code\" />\r\n                    <Box style={{position: 'absolute', top: '50%', transform: 'translateX(25%) translateY(-25%)'}}>\r\n                        { showloginButton ?\r\n                            <GoogleLogin\r\n                                buttonText=\"\"\r\n                                onSuccess={onLoginSuccess}\r\n                                onError={onLoginFailure}\r\n                            /> : null}\r\n                    </Box>\r\n                </Box>\r\n            </Component>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LoginDialog;","import { useContext } from 'react';\r\nimport { AppBar, Toolbar, styled, Box } from '@mui/material';\r\n\r\nimport { AccountContext } from '../context/AccountProvider';\r\n\r\n//components\r\nimport ChatDialog from './chat/ChatDialog';\r\nimport LoginDialog from './account/LoginDialog';\r\n\r\nconst Component = styled(Box)`\r\n    height: 100vh;\r\n    background: #DCDCDC;\r\n`;\r\n\r\nconst Header = styled(AppBar)`\r\n    background-color: #00A884;\r\n    height: 125px;\r\n    box-shadow: none;\r\n`;\r\n    \r\nconst LoginHeader = styled(AppBar)`\r\n    background: #00bfa5;\r\n    height: 200px;\r\n    box-shadow: none;\r\n`;\r\n\r\nconst Messenger = () => {\r\n    const { account } = useContext(AccountContext);\r\n    \r\n    return (\r\n        <Component>\r\n            {\r\n                account ? \r\n                <>\r\n                    <Header>\r\n                        <Toolbar></Toolbar>\r\n                    </Header>\r\n                    <ChatDialog />\r\n                </>\r\n                :\r\n                <>\r\n                    <LoginHeader>\r\n                        <Toolbar></Toolbar>\r\n                    </LoginHeader>\r\n                    <LoginDialog />\r\n                </>\r\n            }\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Messenger;"],"names":["ImageContainer","styled","Box","Image","width","height","borderRadius","padding","BoxWrapper","DescriptionContainer","account","useContext","AccountContext","src","picture","alt","Typography","name","Header","Component","Text","drawerStyle","left","top","boxShadow","open","setOpen","profile","Drawer","onClose","PaperProps","sx","style","zIndex","ArrowBack","onClick","MenuOption","MenuItem","googleLogout","useState","openDrawer","setOpenDrawer","handleClose","setAccount","setShowloginButton","showlogoutButton","setShowlogoutButton","UserContext","setPerson","MoreVert","event","currentTarget","Menu","anchorEl","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Wrapper","Icon","InputField","InputBase","setText","fontSize","placeholder","inputProps","onChange","e","target","value","url","addUser","data","axios","response","console","log","getUsers","setConversation","getConversation","users","getMessages","id","newMessages","uploadFile","downloadMedia","originalImage","preventDefault","fetch","then","resp","blob","window","URL","createObjectURL","a","document","createElement","display","href","duplicateName","split","pop","download","body","appendChild","click","revokeObjectURL","catch","error","formatDate","date","hours","Date","getHours","minutes","getMinutes","objectFit","Container","Timestamp","user","newMessageFlag","message","setMessage","useEffect","getConversationMessage","senderId","sub","receiverId","text","timestamp","updatedAt","getUser","includes","StyledDivider","Divider","setUsers","socket","setActiveUsers","fetchData","fiteredData","filter","toLowerCase","current","emit","on","map","index","length","Name","RightContainer","Status","person","activeUsers","find","Own","Time","TextMessage","createdAt","ImageMessage","position","bottom","right","GetApp","marginRight","border","type","Search","ClipIcon","AttachFile","sendText","setValue","setFile","file","setImage","getImage","FormData","append","EmojiEmotions","htmlFor","files","onFileChange","onKeyPress","Mic","conversation","messages","setMessages","incomingMessage","setIncomingMessage","image","scrollRef","useRef","setNewMessageFlag","now","getMessageDetails","_id","scrollIntoView","transition","members","prev","member","code","keyCode","which","conversationId","ref","getConversationDetails","marginTop","Title","SubTitle","LeftComponent","RightComponent","dialogStyle","margin","maxWidth","maxHeight","overflow","Dialog","BackdropProps","backgroundColor","Object","keys","QRCOde","StyledList","List","showloginButton","onLoginSuccess","res","decoded","jwt_decode","credential","ListItem","transform","buttonText","onSuccess","onError","AppBar","LoginHeader","Toolbar"],"sourceRoot":""}